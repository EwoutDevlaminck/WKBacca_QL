# Example for ASDEX Upgrade shot number 25485
# Case with no turbulence: zero fluctuation level.
#
# Control parameters for processing the electric field amplitude
# ---


###############################################################################
# INPUT PARAMETERS FOR THE BINNING
###############################################################################

# INPUT AND OUTPUT FILES
##########################################################################
# the ray trace data used to bin
equilibriumdirectory = 'StandardCases/AUG25485/input/'
inputdirectory = 'StandardCases/AUG25485/output/'

# name of the input file, 
# will be composed by what is indicated here and formal stuff
inputfilename = ['AUG0fluct']

# number of files, if more than one, not only the file that starts with
# rank0... is used.
nmbrFiles = 1

# directory, where the binned results are written
outputdirectory =  'StandardCases/AUG25485/output/'

# output filename. If not defined, inputfilename is used and _binned attached 
outputfilename = ['AUG0fluct_binned_XZ']
##########################################################################


# WHAT DIMENSIONS TO RESOLVE
##########################################################################
# IN THIS SECTION, YOU CAN CHOOSE WHICH DIMENSIONS SHALL BE RESOLVED.
# THE FOLLOWING CAN BE CHOSEN:
# X, Y, Z, Nx, Ny, Nz, Nparallel, phiN, Psi, rho, R
# THEY WILL BE ARRANGED IN THE ORDER GIVEN HERE.

WhatToResolve = ['R', 'Z']

# here, you can choose the lower and upper boundaries:
min = [150., 20.]
max = [250., 40.]

# and the number of bins
nmbr = [300, 150]
##########################################################################


# WHAT DATA TO PRODUCE
########################################################################## 
# IN THIS SECTION YOU CAN CHOOSE WHAT DATA SHALL BE PRODUCED.

# if the following line is defined, the electric field is normalised
# such that energy density / flow / power absorption is stored.
# if it is commented out, the electric field is normalised to 1
# at the central antenna position
InputPower = 1.

# put True in the next line if you wish to save the basic 
# Wfct result (binning weight 1)
storeWfct = True

# choose, if also velocity components shall be stored 
storeVelocityField = False

# in the next line, you can choose the velocity field components you want to 
# store in the list defined.
# They can be chosen out of Nx, Ny, Nz, Nparallel, phiN
# VelocityComponentsToStore = ['Nx', 'Nz']

# put True in the following line if you wish to 
# store absorption
storeAbsorption = False
##########################################################################



# OPTIONS ON SCATTERING
##########################################################################
# put True in the next line if you wish to compute the total amplitude
# including scattered rays
computeAmplitude = True

# put True in the next line if you wish to compute the total amplitude
# of all rays which are not scattered
computeAmplitudeUnscattered = False

# put True in the next line if you wish to compute the effect of 
# scattering
computeScatteringEffect = False

# put True in the next line if you wish to compute the contribution of
# the scattered rays only
computeScatteredContribution = False

##########################################################################





# SOME ADDITIONAL OPTIONS
########################################################################## 
# put True in the next line if you wish to take into account the 
# correction factor to change from the Hamiltonian used in the
# ray tracing code to the physical one
correctionfactor = True

##########################################################################




# PLOTTING DIRECTIVES
##########################################################################
# plotting modes
# valid values are: 
#  plotmode = 'evolution of partial densities' 
#  plotmode = 'poloidal section - tokamaks'
#  plotmode = 'poloidal section - TORPEX-like'
###plotmode = 'evolution of partial densities'
plotmode = 'poloidal section - tokamaks'

# final rendering contourf or pcolormesh
# (select: 'pcolormesh', 'contourf', 'contour', default='contourf')
rendering = 'contourf' 

# Load the physical equilibrium for plotting
analytical_tokamak = 'No'

# Compare profile to TORBEAM
compare_to_TORBEAM = 'no'

# TORBEAM results directory
# (Set the path to the directory holding TORBEAM output files
#  This is only needed when VolumeSource = 'TORBEAM' or when
#  compare_to_TORBEAM = 'yes')
# torbeam_dir = '/home/omaj/Codes/WKBeam/TORBEAM_for_StandardAUG25485/'


# select sections to be plotted in details
vsections = [215., 180., 165.]
hsections = [2.5, 9., -1.]

# Geometric parameters of the tokamak
rmaj = 620. # major radius in cm
rmin = 201. # minor radius in cm

# Mask points with energy density less than this
mask_threshold = 0.01

##########################################################################
